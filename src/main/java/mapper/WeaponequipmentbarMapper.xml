<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.WeaponequipmentbarMapper" >
  <resultMap id="BaseResultMap" type="pojo.Weaponequipmentbar" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="wid" property="wid" jdbcType="INTEGER" />
    <result column="durability" property="durability" jdbcType="INTEGER" />
    <result column="typeOf" property="typeof" jdbcType="VARCHAR" />
    <result column="startlevel" property="startlevel" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, username, wid, durability, typeOf, startlevel
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="pojo.WeaponequipmentbarExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from weaponequipmentbar
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      core.order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from weaponequipmentbar
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from weaponequipmentbar
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="pojo.WeaponequipmentbarExample" >
    delete from weaponequipmentbar
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="pojo.Weaponequipmentbar" >
    insert into weaponequipmentbar (id, username, wid, 
      durability, typeOf, startlevel
      )
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{wid,jdbcType=INTEGER}, 
      #{durability,jdbcType=INTEGER}, #{typeof,jdbcType=VARCHAR}, #{startlevel,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="pojo.Weaponequipmentbar" >
    insert into weaponequipmentbar
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="wid != null" >
        wid,
      </if>
      <if test="durability != null" >
        durability,
      </if>
      <if test="typeof != null" >
        typeOf,
      </if>
      <if test="startlevel != null" >
        startlevel,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="wid != null" >
        #{wid,jdbcType=INTEGER},
      </if>
      <if test="durability != null" >
        #{durability,jdbcType=INTEGER},
      </if>
      <if test="typeof != null" >
        #{typeof,jdbcType=VARCHAR},
      </if>
      <if test="startlevel != null" >
        #{startlevel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="pojo.WeaponequipmentbarExample" resultType="java.lang.Integer" >
    select count(*) from weaponequipmentbar
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update weaponequipmentbar
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.wid != null" >
        wid = #{record.wid,jdbcType=INTEGER},
      </if>
      <if test="record.durability != null" >
        durability = #{record.durability,jdbcType=INTEGER},
      </if>
      <if test="record.typeof != null" >
        typeOf = #{record.typeof,jdbcType=VARCHAR},
      </if>
      <if test="record.startlevel != null" >
        startlevel = #{record.startlevel,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update weaponequipmentbar
    set id = #{record.id,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      wid = #{record.wid,jdbcType=INTEGER},
      durability = #{record.durability,jdbcType=INTEGER},
      typeOf = #{record.typeof,jdbcType=VARCHAR},
      startlevel = #{record.startlevel,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="pojo.Weaponequipmentbar" >
    update weaponequipmentbar
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="wid != null" >
        wid = #{wid,jdbcType=INTEGER},
      </if>
      <if test="durability != null" >
        durability = #{durability,jdbcType=INTEGER},
      </if>
      <if test="typeof != null" >
        typeOf = #{typeof,jdbcType=VARCHAR},
      </if>
      <if test="startlevel != null" >
        startlevel = #{startlevel,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="pojo.Weaponequipmentbar" >
    update weaponequipmentbar
    set username = #{username,jdbcType=VARCHAR},
      wid = #{wid,jdbcType=INTEGER},
      durability = #{durability,jdbcType=INTEGER},
      typeOf = #{typeof,jdbcType=VARCHAR},
      startlevel = #{startlevel,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>