<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="pojo.User" >
    <id column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="pos" property="pos" jdbcType="VARCHAR" />
    <result column="mp" property="mp" jdbcType="VARCHAR" />
    <result column="hp" property="hp" jdbcType="VARCHAR" />
    <result column="money" property="money" jdbcType="VARCHAR" />
    <result column="roleId" property="roleid" jdbcType="INTEGER" />
    <result column="experience" property="experience" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    username, password, status, pos, mp, hp, money, roleId, experience
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="pojo.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from user
    where username = #{username,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from user
    where username = #{username,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="pojo.UserExample" >
    delete from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="pojo.User" >
    insert into user (username, password, status, 
      pos, mp, hp, money, 
      roleId, experience)
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{pos,jdbcType=VARCHAR}, #{mp,jdbcType=VARCHAR}, #{hp,jdbcType=VARCHAR}, #{money,jdbcType=VARCHAR}, 
      #{roleid,jdbcType=INTEGER}, #{experience,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="pojo.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="pos != null" >
        pos,
      </if>
      <if test="mp != null" >
        mp,
      </if>
      <if test="hp != null" >
        hp,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="roleid != null" >
        roleId,
      </if>
      <if test="experience != null" >
        experience,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="pos != null" >
        #{pos,jdbcType=VARCHAR},
      </if>
      <if test="mp != null" >
        #{mp,jdbcType=VARCHAR},
      </if>
      <if test="hp != null" >
        #{hp,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        #{money,jdbcType=VARCHAR},
      </if>
      <if test="roleid != null" >
        #{roleid,jdbcType=INTEGER},
      </if>
      <if test="experience != null" >
        #{experience,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="pojo.UserExample" resultType="java.lang.Integer" >
    select count(*) from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user
    <set >
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.pos != null" >
        pos = #{record.pos,jdbcType=VARCHAR},
      </if>
      <if test="record.mp != null" >
        mp = #{record.mp,jdbcType=VARCHAR},
      </if>
      <if test="record.hp != null" >
        hp = #{record.hp,jdbcType=VARCHAR},
      </if>
      <if test="record.money != null" >
        money = #{record.money,jdbcType=VARCHAR},
      </if>
      <if test="record.roleid != null" >
        roleId = #{record.roleid,jdbcType=INTEGER},
      </if>
      <if test="record.experience != null" >
        experience = #{record.experience,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user
    set username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      pos = #{record.pos,jdbcType=VARCHAR},
      mp = #{record.mp,jdbcType=VARCHAR},
      hp = #{record.hp,jdbcType=VARCHAR},
      money = #{record.money,jdbcType=VARCHAR},
      roleId = #{record.roleid,jdbcType=INTEGER},
      experience = #{record.experience,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="pojo.User" >
    update user
    <set >
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="pos != null" >
        pos = #{pos,jdbcType=VARCHAR},
      </if>
      <if test="mp != null" >
        mp = #{mp,jdbcType=VARCHAR},
      </if>
      <if test="hp != null" >
        hp = #{hp,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=VARCHAR},
      </if>
      <if test="roleid != null" >
        roleId = #{roleid,jdbcType=INTEGER},
      </if>
      <if test="experience != null" >
        experience = #{experience,jdbcType=INTEGER},
      </if>
    </set>
    where username = #{username,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="pojo.User" >
    update user
    set password = #{password,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      pos = #{pos,jdbcType=VARCHAR},
      mp = #{mp,jdbcType=VARCHAR},
      hp = #{hp,jdbcType=VARCHAR},
      money = #{money,jdbcType=VARCHAR},
      roleId = #{roleid,jdbcType=INTEGER},
      experience = #{experience,jdbcType=INTEGER}
    where username = #{username,jdbcType=VARCHAR}
  </update>
  
    <resultMap type="pojo.User" id="userMap">
        <id column="username" property="username"/>
        <result column="status" property="status"/>
        <result column="pos" property="pos"/>
        <result column="mp" property="mp"/>
        <result column="hp" property="hp"/>
        <result column="money" property="money"/>
        <result column="roleId" property="roleid"/>
        <result column="experience" property="experience"/>
        <collection property="userBag" ofType="pojo.Userbag" column="sid">
            <id column="sid" property="id"/><!-- 这里的column对应的是下面查询的别名，而不是表字段名 -->
            <result column="wid" property="wid"/><!-- property对应JavaBean中的属性名 -->
            <result column="num" property="num"/>
            <result column="sname" property="name"/>
            <result column="stype" property="typeof"/>
            <result column="sdurability" property="durability"/>
        </collection>
        <collection property="weaponequipmentbars" ofType="pojo.Weaponequipmentbar" column="sid">
            <id column="w_id" property="id"/><!-- 这里的column对应的是下面查询的别名，而不是表字段名 -->
            <result column="wwid" property="wid"/><!-- property对应JavaBean中的属性名 -->
            <result column="wname" property="username"/>
            <result column="wtype" property="typeof"/>
            <result column="wdurability" property="durability"/>
        </collection>
    </resultMap>


    <select id="getUser" resultMap="userMap">
		SELECT
		 u.money,
		 u.username,
		 u.status,
		 u.pos,
		 u.mp,
		 u.hp,
		 u.roleId,
		 u.experience,
		 s.id AS sid,
		 s.wid,
		 s.num,
		 s.name AS sname,
		 s.typeOf AS stype,
		 s.durability AS sdurability,
		 w.id AS w_id,
		 w.durability AS wdurability,
		 w.username AS wname,
		 w.wid AS wwid,
		 w.typeOf AS wtype
		FROM
		USER u
		LEFT JOIN userbag s ON u.username = s.name
		LEFT JOIN weaponequipmentbar w ON u.username = w.username
		where u.username = #{username}
		and u.password = #{password};
	</select>
</mapper>